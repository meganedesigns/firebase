import { FirebaseApp } from '@nativescript/firebase-core';
import { AuthorizationStatus, IMessaging, Permissions, RemoteMessage } from './common';
export { AuthorizationStatus } from './common';
export declare class Messaging implements IMessaging {
    #private;
    constructor();
    get showNotificationsWhenInForeground(): boolean;
    set showNotificationsWhenInForeground(value: boolean);
    get _onMessage(): (message: RemoteMessage) => void;
    get _onNotificationTap(): (message: RemoteMessage) => void;
    get _onToken(): (token: string) => void;
    getToken(): Promise<string>;
    getAPNSToken(): any;
    _hasPermission(resolve: any, reject: any): void;
    hasPermission(): Promise<AuthorizationStatus>;
    onMessage(listener: (message: RemoteMessage) => any): void;
    onToken(listener: (token: string) => any): void;
    onNotificationTap(listener: (message: RemoteMessage) => any): void;
    registerDeviceForRemoteMessages(): Promise<void>;
    requestPermission(permissions?: Permissions): Promise<AuthorizationStatus>;
    subscribeToTopic(topic: string): Promise<void>;
    unregisterDeviceForRemoteMessages(): Promise<void>;
    unsubscribeFromTopic(topic: string): Promise<void>;
    deleteToken(): Promise<void>;
    get isDeviceRegisteredForRemoteMessages(): boolean;
    get autoInitEnabled(): boolean;
    set autoInitEnabled(value: boolean);
    get app(): FirebaseApp;
    get native(): FIRMessaging;
    get ios(): FIRMessaging;
}
